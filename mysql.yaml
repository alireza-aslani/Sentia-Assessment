AWSTemplateFormatVersion: 2010-09-09
Description: RDS MySQL instance.
Parameters:
    DatabaseName:
      Default: "wordpress"
      Description: The database name (Default "wordpress", change if you are creating more than one database)
      Type: String

    DatabaseInstanceType:
        Default: db.t2.micro
        AllowedValues:
            - db.t2.micro
            - db.t2.small
            - db.t2.medium
            - db.t2.large
            - db.t2.xlarge
            - db.t2.2xlarge
            - db.r4.large
            - db.r4.xlarge
            - db.r4.2xlarge
            - db.r4.4xlarge
            - db.r4.8xlarge
            - db.r4.16xlarge
            - db.m4.large
            - db.m4.2xlarge
            - db.m4.4xlarge
            - db.m4.10xlarge
            - db.m4.16xlarge
        Description: "The instance type to use for the database. Pricing: https://aws.amazon.com/rds/mysql/pricing/"
        Type: String
    
    DatabasePassword:
        AllowedPattern: "[a-zA-Z0-9]+"
        ConstraintDescription: must contain only alphanumeric characters. Must have length 8-41.
        Description: The database admin account password. (Choose a secure password)
        MaxLength: '41'
        MinLength: '8'
        NoEcho: 'true'
        Type: String
    
    DatabaseUsername:
        Default: "wordpress"
        AllowedPattern: "[a-zA-Z0-9]+"
        ConstraintDescription: must contain only alphanumeric characters. Must have length 1-16
        Description: The database admin account user name. (Default "wordpress")
        MaxLength: '16'
        MinLength: '1'
        Type: String
    
    AllocatedStorage:
        Default: 20
        Description: Storage to allocate in GB (Default "20")
        Type: Number
        MinValue: 20
        MaxValue: 16384
        ConstraintDescription: Allocated storage size must be in range 20-16384 GB

    VPCStack:
      Type: String
      Description: VPC Stack Name

Resources:

    DatabaseSubnetGroup:
        Type: AWS::RDS::DBSubnetGroup
        Properties:
            DBSubnetGroupDescription: Creates a database subnet group. Subnet groups must contain at least two subnets in two different AZ
            SubnetIds:
                - !Ref PublicSubnet1
                - !Ref PublicSubnet2

    ParameterGroup:
        Type: "AWS::RDS::DBParameterGroup"
        Properties: 
            Description: WordPress DB parameter group 
            Family: MySQL5.7
            Parameters:
                max_connections: 300

    DatabaseInstance:
        Type: AWS::RDS::DBInstance
        Properties:
            Engine: mysql
            EngineVersion: 5.7.19
            DBInstanceClass:
                Ref: DatabaseInstanceType
            DBParameterGroupName: !Ref ParameterGroup
#            PubliclyAccessible: "true"
            StorageType: "gp2"
            AllocatedStorage: !Ref AllocatedStorage
            BackupRetentionPeriod: 35
            DBInstanceIdentifier: !Ref DatabaseName
            MasterUsername:
              Ref: DatabaseUsername
            MasterUserPassword:
              Ref: DatabasePassword
            PreferredBackupWindow: 02:00-03:00
            PreferredMaintenanceWindow: mon:03:00-mon:04:00
            DBSubnetGroupName:
                Ref: DatabaseSubnetGroup
            VPCSecurityGroups:
                - Ref: DatabaseSecurityGroup

    PublicSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId:
                Fn::ImportValue:
                    !Sub "${VPCStack}-VPCID"
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: "10.0.32.0/24"
#            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${DatabaseName} Public Subnet (AZ1)

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId:
                Fn::ImportValue:
                    !Sub "${VPCStack}-VPCID"
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: "10.0.64.0/24"
#            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${DatabaseName} Public Subnet (AZ2)

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId:
                Fn::ImportValue:
                    !Sub "${VPCStack}-PublicSubnetRouteTable"
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId:
                Fn::ImportValue:
                    !Sub "${VPCStack}-PublicSubnetRouteTable"
            SubnetId: !Ref PublicSubnet2

    DatabaseSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId:
                Fn::ImportValue:
                    !Sub "${VPCStack}-VPCID"
            GroupDescription: Access to database
            SecurityGroupIngress:
                - CidrIp: 10.0.0.0/16
                  FromPort: 3306
                  ToPort: 3306
                  IpProtocol: tcp
            Tags: 
                - Key: Name
                  Value: !Sub ${DatabaseName}-security-group

Outputs:
    DatabaseEndpoint: 
        Description: The database endpoint
        Value: !GetAtt DatabaseInstance.Endpoint.Address
    
    DatabasePort:
        Description: The database port
        Value: !GetAtt DatabaseInstance.Endpoint.Port
